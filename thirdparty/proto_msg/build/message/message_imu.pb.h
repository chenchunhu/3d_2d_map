// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_imu.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_message_5fimu_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_message_5fimu_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3020000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3020000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "message_header.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_message_5fimu_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_message_5fimu_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_message_5fimu_2eproto;
namespace rbk {
namespace protocol {
class Message_IMU;
struct Message_IMUDefaultTypeInternal;
extern Message_IMUDefaultTypeInternal _Message_IMU_default_instance_;
class Message_ImuInstallInfo;
struct Message_ImuInstallInfoDefaultTypeInternal;
extern Message_ImuInstallInfoDefaultTypeInternal _Message_ImuInstallInfo_default_instance_;
}  // namespace protocol
}  // namespace rbk
PROTOBUF_NAMESPACE_OPEN
template<> ::rbk::protocol::Message_IMU* Arena::CreateMaybeMessage<::rbk::protocol::Message_IMU>(Arena*);
template<> ::rbk::protocol::Message_ImuInstallInfo* Arena::CreateMaybeMessage<::rbk::protocol::Message_ImuInstallInfo>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace rbk {
namespace protocol {

// ===================================================================

class Message_ImuInstallInfo final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rbk.protocol.Message_ImuInstallInfo) */ {
 public:
  inline Message_ImuInstallInfo() : Message_ImuInstallInfo(nullptr) {}
  ~Message_ImuInstallInfo() override;
  explicit PROTOBUF_CONSTEXPR Message_ImuInstallInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Message_ImuInstallInfo(const Message_ImuInstallInfo& from);
  Message_ImuInstallInfo(Message_ImuInstallInfo&& from) noexcept
    : Message_ImuInstallInfo() {
    *this = ::std::move(from);
  }

  inline Message_ImuInstallInfo& operator=(const Message_ImuInstallInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message_ImuInstallInfo& operator=(Message_ImuInstallInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message_ImuInstallInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message_ImuInstallInfo* internal_default_instance() {
    return reinterpret_cast<const Message_ImuInstallInfo*>(
               &_Message_ImuInstallInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Message_ImuInstallInfo& a, Message_ImuInstallInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(Message_ImuInstallInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message_ImuInstallInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message_ImuInstallInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Message_ImuInstallInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Message_ImuInstallInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Message_ImuInstallInfo& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Message_ImuInstallInfo* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rbk.protocol.Message_ImuInstallInfo";
  }
  protected:
  explicit Message_ImuInstallInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
    kQxFieldNumber = 4,
    kQyFieldNumber = 5,
    kQzFieldNumber = 6,
    kQwFieldNumber = 7,
    kSSFFieldNumber = 8,
  };
  // double x = 1;
  void clear_x();
  double x() const;
  void set_x(double value);
  private:
  double _internal_x() const;
  void _internal_set_x(double value);
  public:

  // double y = 2;
  void clear_y();
  double y() const;
  void set_y(double value);
  private:
  double _internal_y() const;
  void _internal_set_y(double value);
  public:

  // double z = 3;
  void clear_z();
  double z() const;
  void set_z(double value);
  private:
  double _internal_z() const;
  void _internal_set_z(double value);
  public:

  // double qx = 4;
  void clear_qx();
  double qx() const;
  void set_qx(double value);
  private:
  double _internal_qx() const;
  void _internal_set_qx(double value);
  public:

  // double qy = 5;
  void clear_qy();
  double qy() const;
  void set_qy(double value);
  private:
  double _internal_qy() const;
  void _internal_set_qy(double value);
  public:

  // double qz = 6;
  void clear_qz();
  double qz() const;
  void set_qz(double value);
  private:
  double _internal_qz() const;
  void _internal_set_qz(double value);
  public:

  // double qw = 7;
  void clear_qw();
  double qw() const;
  void set_qw(double value);
  private:
  double _internal_qw() const;
  void _internal_set_qw(double value);
  public:

  // double SSF = 8;
  void clear_ssf();
  double ssf() const;
  void set_ssf(double value);
  private:
  double _internal_ssf() const;
  void _internal_set_ssf(double value);
  public:

  // @@protoc_insertion_point(class_scope:rbk.protocol.Message_ImuInstallInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  double x_;
  double y_;
  double z_;
  double qx_;
  double qy_;
  double qz_;
  double qw_;
  double ssf_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_message_5fimu_2eproto;
};
// -------------------------------------------------------------------

class Message_IMU final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rbk.protocol.Message_IMU) */ {
 public:
  inline Message_IMU() : Message_IMU(nullptr) {}
  ~Message_IMU() override;
  explicit PROTOBUF_CONSTEXPR Message_IMU(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Message_IMU(const Message_IMU& from);
  Message_IMU(Message_IMU&& from) noexcept
    : Message_IMU() {
    *this = ::std::move(from);
  }

  inline Message_IMU& operator=(const Message_IMU& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message_IMU& operator=(Message_IMU&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message_IMU& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message_IMU* internal_default_instance() {
    return reinterpret_cast<const Message_IMU*>(
               &_Message_IMU_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Message_IMU& a, Message_IMU& b) {
    a.Swap(&b);
  }
  inline void Swap(Message_IMU* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message_IMU* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message_IMU* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Message_IMU>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Message_IMU& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Message_IMU& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Message_IMU* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rbk.protocol.Message_IMU";
  }
  protected:
  explicit Message_IMU(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHeaderFieldNumber = 1,
    kInstallInfoFieldNumber = 18,
    kYawFieldNumber = 2,
    kRollFieldNumber = 3,
    kPitchFieldNumber = 4,
    kAccXFieldNumber = 5,
    kAccYFieldNumber = 6,
    kAccZFieldNumber = 7,
    kRotXFieldNumber = 8,
    kRotYFieldNumber = 9,
    kRotZFieldNumber = 10,
    kRotOffXFieldNumber = 11,
    kRotOffYFieldNumber = 12,
    kQxFieldNumber = 14,
    kQyFieldNumber = 15,
    kQzFieldNumber = 16,
    kQwFieldNumber = 17,
    kRotOffZFieldNumber = 13,
  };
  // .rbk.protocol.Message_Header header = 1;
  bool has_header() const;
  private:
  bool _internal_has_header() const;
  public:
  void clear_header();
  const ::rbk::protocol::Message_Header& header() const;
  PROTOBUF_NODISCARD ::rbk::protocol::Message_Header* release_header();
  ::rbk::protocol::Message_Header* mutable_header();
  void set_allocated_header(::rbk::protocol::Message_Header* header);
  private:
  const ::rbk::protocol::Message_Header& _internal_header() const;
  ::rbk::protocol::Message_Header* _internal_mutable_header();
  public:
  void unsafe_arena_set_allocated_header(
      ::rbk::protocol::Message_Header* header);
  ::rbk::protocol::Message_Header* unsafe_arena_release_header();

  // .rbk.protocol.Message_ImuInstallInfo install_info = 18;
  bool has_install_info() const;
  private:
  bool _internal_has_install_info() const;
  public:
  void clear_install_info();
  const ::rbk::protocol::Message_ImuInstallInfo& install_info() const;
  PROTOBUF_NODISCARD ::rbk::protocol::Message_ImuInstallInfo* release_install_info();
  ::rbk::protocol::Message_ImuInstallInfo* mutable_install_info();
  void set_allocated_install_info(::rbk::protocol::Message_ImuInstallInfo* install_info);
  private:
  const ::rbk::protocol::Message_ImuInstallInfo& _internal_install_info() const;
  ::rbk::protocol::Message_ImuInstallInfo* _internal_mutable_install_info();
  public:
  void unsafe_arena_set_allocated_install_info(
      ::rbk::protocol::Message_ImuInstallInfo* install_info);
  ::rbk::protocol::Message_ImuInstallInfo* unsafe_arena_release_install_info();

  // double yaw = 2;
  void clear_yaw();
  double yaw() const;
  void set_yaw(double value);
  private:
  double _internal_yaw() const;
  void _internal_set_yaw(double value);
  public:

  // double roll = 3;
  void clear_roll();
  double roll() const;
  void set_roll(double value);
  private:
  double _internal_roll() const;
  void _internal_set_roll(double value);
  public:

  // double pitch = 4;
  void clear_pitch();
  double pitch() const;
  void set_pitch(double value);
  private:
  double _internal_pitch() const;
  void _internal_set_pitch(double value);
  public:

  // double acc_x = 5;
  void clear_acc_x();
  double acc_x() const;
  void set_acc_x(double value);
  private:
  double _internal_acc_x() const;
  void _internal_set_acc_x(double value);
  public:

  // double acc_y = 6;
  void clear_acc_y();
  double acc_y() const;
  void set_acc_y(double value);
  private:
  double _internal_acc_y() const;
  void _internal_set_acc_y(double value);
  public:

  // double acc_z = 7;
  void clear_acc_z();
  double acc_z() const;
  void set_acc_z(double value);
  private:
  double _internal_acc_z() const;
  void _internal_set_acc_z(double value);
  public:

  // double rot_x = 8;
  void clear_rot_x();
  double rot_x() const;
  void set_rot_x(double value);
  private:
  double _internal_rot_x() const;
  void _internal_set_rot_x(double value);
  public:

  // double rot_y = 9;
  void clear_rot_y();
  double rot_y() const;
  void set_rot_y(double value);
  private:
  double _internal_rot_y() const;
  void _internal_set_rot_y(double value);
  public:

  // double rot_z = 10;
  void clear_rot_z();
  double rot_z() const;
  void set_rot_z(double value);
  private:
  double _internal_rot_z() const;
  void _internal_set_rot_z(double value);
  public:

  // int32 rot_off_x = 11;
  void clear_rot_off_x();
  int32_t rot_off_x() const;
  void set_rot_off_x(int32_t value);
  private:
  int32_t _internal_rot_off_x() const;
  void _internal_set_rot_off_x(int32_t value);
  public:

  // int32 rot_off_y = 12;
  void clear_rot_off_y();
  int32_t rot_off_y() const;
  void set_rot_off_y(int32_t value);
  private:
  int32_t _internal_rot_off_y() const;
  void _internal_set_rot_off_y(int32_t value);
  public:

  // double qx = 14;
  void clear_qx();
  double qx() const;
  void set_qx(double value);
  private:
  double _internal_qx() const;
  void _internal_set_qx(double value);
  public:

  // double qy = 15;
  void clear_qy();
  double qy() const;
  void set_qy(double value);
  private:
  double _internal_qy() const;
  void _internal_set_qy(double value);
  public:

  // double qz = 16;
  void clear_qz();
  double qz() const;
  void set_qz(double value);
  private:
  double _internal_qz() const;
  void _internal_set_qz(double value);
  public:

  // double qw = 17;
  void clear_qw();
  double qw() const;
  void set_qw(double value);
  private:
  double _internal_qw() const;
  void _internal_set_qw(double value);
  public:

  // int32 rot_off_z = 13;
  void clear_rot_off_z();
  int32_t rot_off_z() const;
  void set_rot_off_z(int32_t value);
  private:
  int32_t _internal_rot_off_z() const;
  void _internal_set_rot_off_z(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:rbk.protocol.Message_IMU)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::rbk::protocol::Message_Header* header_;
  ::rbk::protocol::Message_ImuInstallInfo* install_info_;
  double yaw_;
  double roll_;
  double pitch_;
  double acc_x_;
  double acc_y_;
  double acc_z_;
  double rot_x_;
  double rot_y_;
  double rot_z_;
  int32_t rot_off_x_;
  int32_t rot_off_y_;
  double qx_;
  double qy_;
  double qz_;
  double qw_;
  int32_t rot_off_z_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_message_5fimu_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Message_ImuInstallInfo

// double x = 1;
inline void Message_ImuInstallInfo::clear_x() {
  x_ = 0;
}
inline double Message_ImuInstallInfo::_internal_x() const {
  return x_;
}
inline double Message_ImuInstallInfo::x() const {
  // @@protoc_insertion_point(field_get:rbk.protocol.Message_ImuInstallInfo.x)
  return _internal_x();
}
inline void Message_ImuInstallInfo::_internal_set_x(double value) {
  
  x_ = value;
}
inline void Message_ImuInstallInfo::set_x(double value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:rbk.protocol.Message_ImuInstallInfo.x)
}

// double y = 2;
inline void Message_ImuInstallInfo::clear_y() {
  y_ = 0;
}
inline double Message_ImuInstallInfo::_internal_y() const {
  return y_;
}
inline double Message_ImuInstallInfo::y() const {
  // @@protoc_insertion_point(field_get:rbk.protocol.Message_ImuInstallInfo.y)
  return _internal_y();
}
inline void Message_ImuInstallInfo::_internal_set_y(double value) {
  
  y_ = value;
}
inline void Message_ImuInstallInfo::set_y(double value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:rbk.protocol.Message_ImuInstallInfo.y)
}

// double z = 3;
inline void Message_ImuInstallInfo::clear_z() {
  z_ = 0;
}
inline double Message_ImuInstallInfo::_internal_z() const {
  return z_;
}
inline double Message_ImuInstallInfo::z() const {
  // @@protoc_insertion_point(field_get:rbk.protocol.Message_ImuInstallInfo.z)
  return _internal_z();
}
inline void Message_ImuInstallInfo::_internal_set_z(double value) {
  
  z_ = value;
}
inline void Message_ImuInstallInfo::set_z(double value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:rbk.protocol.Message_ImuInstallInfo.z)
}

// double qx = 4;
inline void Message_ImuInstallInfo::clear_qx() {
  qx_ = 0;
}
inline double Message_ImuInstallInfo::_internal_qx() const {
  return qx_;
}
inline double Message_ImuInstallInfo::qx() const {
  // @@protoc_insertion_point(field_get:rbk.protocol.Message_ImuInstallInfo.qx)
  return _internal_qx();
}
inline void Message_ImuInstallInfo::_internal_set_qx(double value) {
  
  qx_ = value;
}
inline void Message_ImuInstallInfo::set_qx(double value) {
  _internal_set_qx(value);
  // @@protoc_insertion_point(field_set:rbk.protocol.Message_ImuInstallInfo.qx)
}

// double qy = 5;
inline void Message_ImuInstallInfo::clear_qy() {
  qy_ = 0;
}
inline double Message_ImuInstallInfo::_internal_qy() const {
  return qy_;
}
inline double Message_ImuInstallInfo::qy() const {
  // @@protoc_insertion_point(field_get:rbk.protocol.Message_ImuInstallInfo.qy)
  return _internal_qy();
}
inline void Message_ImuInstallInfo::_internal_set_qy(double value) {
  
  qy_ = value;
}
inline void Message_ImuInstallInfo::set_qy(double value) {
  _internal_set_qy(value);
  // @@protoc_insertion_point(field_set:rbk.protocol.Message_ImuInstallInfo.qy)
}

// double qz = 6;
inline void Message_ImuInstallInfo::clear_qz() {
  qz_ = 0;
}
inline double Message_ImuInstallInfo::_internal_qz() const {
  return qz_;
}
inline double Message_ImuInstallInfo::qz() const {
  // @@protoc_insertion_point(field_get:rbk.protocol.Message_ImuInstallInfo.qz)
  return _internal_qz();
}
inline void Message_ImuInstallInfo::_internal_set_qz(double value) {
  
  qz_ = value;
}
inline void Message_ImuInstallInfo::set_qz(double value) {
  _internal_set_qz(value);
  // @@protoc_insertion_point(field_set:rbk.protocol.Message_ImuInstallInfo.qz)
}

// double qw = 7;
inline void Message_ImuInstallInfo::clear_qw() {
  qw_ = 0;
}
inline double Message_ImuInstallInfo::_internal_qw() const {
  return qw_;
}
inline double Message_ImuInstallInfo::qw() const {
  // @@protoc_insertion_point(field_get:rbk.protocol.Message_ImuInstallInfo.qw)
  return _internal_qw();
}
inline void Message_ImuInstallInfo::_internal_set_qw(double value) {
  
  qw_ = value;
}
inline void Message_ImuInstallInfo::set_qw(double value) {
  _internal_set_qw(value);
  // @@protoc_insertion_point(field_set:rbk.protocol.Message_ImuInstallInfo.qw)
}

// double SSF = 8;
inline void Message_ImuInstallInfo::clear_ssf() {
  ssf_ = 0;
}
inline double Message_ImuInstallInfo::_internal_ssf() const {
  return ssf_;
}
inline double Message_ImuInstallInfo::ssf() const {
  // @@protoc_insertion_point(field_get:rbk.protocol.Message_ImuInstallInfo.SSF)
  return _internal_ssf();
}
inline void Message_ImuInstallInfo::_internal_set_ssf(double value) {
  
  ssf_ = value;
}
inline void Message_ImuInstallInfo::set_ssf(double value) {
  _internal_set_ssf(value);
  // @@protoc_insertion_point(field_set:rbk.protocol.Message_ImuInstallInfo.SSF)
}

// -------------------------------------------------------------------

// Message_IMU

// .rbk.protocol.Message_Header header = 1;
inline bool Message_IMU::_internal_has_header() const {
  return this != internal_default_instance() && header_ != nullptr;
}
inline bool Message_IMU::has_header() const {
  return _internal_has_header();
}
inline const ::rbk::protocol::Message_Header& Message_IMU::_internal_header() const {
  const ::rbk::protocol::Message_Header* p = header_;
  return p != nullptr ? *p : reinterpret_cast<const ::rbk::protocol::Message_Header&>(
      ::rbk::protocol::_Message_Header_default_instance_);
}
inline const ::rbk::protocol::Message_Header& Message_IMU::header() const {
  // @@protoc_insertion_point(field_get:rbk.protocol.Message_IMU.header)
  return _internal_header();
}
inline void Message_IMU::unsafe_arena_set_allocated_header(
    ::rbk::protocol::Message_Header* header) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(header_);
  }
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rbk.protocol.Message_IMU.header)
}
inline ::rbk::protocol::Message_Header* Message_IMU::release_header() {
  
  ::rbk::protocol::Message_Header* temp = header_;
  header_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::rbk::protocol::Message_Header* Message_IMU::unsafe_arena_release_header() {
  // @@protoc_insertion_point(field_release:rbk.protocol.Message_IMU.header)
  
  ::rbk::protocol::Message_Header* temp = header_;
  header_ = nullptr;
  return temp;
}
inline ::rbk::protocol::Message_Header* Message_IMU::_internal_mutable_header() {
  
  if (header_ == nullptr) {
    auto* p = CreateMaybeMessage<::rbk::protocol::Message_Header>(GetArenaForAllocation());
    header_ = p;
  }
  return header_;
}
inline ::rbk::protocol::Message_Header* Message_IMU::mutable_header() {
  ::rbk::protocol::Message_Header* _msg = _internal_mutable_header();
  // @@protoc_insertion_point(field_mutable:rbk.protocol.Message_IMU.header)
  return _msg;
}
inline void Message_IMU::set_allocated_header(::rbk::protocol::Message_Header* header) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(header_);
  }
  if (header) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(header));
    if (message_arena != submessage_arena) {
      header = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:rbk.protocol.Message_IMU.header)
}

// double yaw = 2;
inline void Message_IMU::clear_yaw() {
  yaw_ = 0;
}
inline double Message_IMU::_internal_yaw() const {
  return yaw_;
}
inline double Message_IMU::yaw() const {
  // @@protoc_insertion_point(field_get:rbk.protocol.Message_IMU.yaw)
  return _internal_yaw();
}
inline void Message_IMU::_internal_set_yaw(double value) {
  
  yaw_ = value;
}
inline void Message_IMU::set_yaw(double value) {
  _internal_set_yaw(value);
  // @@protoc_insertion_point(field_set:rbk.protocol.Message_IMU.yaw)
}

// double roll = 3;
inline void Message_IMU::clear_roll() {
  roll_ = 0;
}
inline double Message_IMU::_internal_roll() const {
  return roll_;
}
inline double Message_IMU::roll() const {
  // @@protoc_insertion_point(field_get:rbk.protocol.Message_IMU.roll)
  return _internal_roll();
}
inline void Message_IMU::_internal_set_roll(double value) {
  
  roll_ = value;
}
inline void Message_IMU::set_roll(double value) {
  _internal_set_roll(value);
  // @@protoc_insertion_point(field_set:rbk.protocol.Message_IMU.roll)
}

// double pitch = 4;
inline void Message_IMU::clear_pitch() {
  pitch_ = 0;
}
inline double Message_IMU::_internal_pitch() const {
  return pitch_;
}
inline double Message_IMU::pitch() const {
  // @@protoc_insertion_point(field_get:rbk.protocol.Message_IMU.pitch)
  return _internal_pitch();
}
inline void Message_IMU::_internal_set_pitch(double value) {
  
  pitch_ = value;
}
inline void Message_IMU::set_pitch(double value) {
  _internal_set_pitch(value);
  // @@protoc_insertion_point(field_set:rbk.protocol.Message_IMU.pitch)
}

// double acc_x = 5;
inline void Message_IMU::clear_acc_x() {
  acc_x_ = 0;
}
inline double Message_IMU::_internal_acc_x() const {
  return acc_x_;
}
inline double Message_IMU::acc_x() const {
  // @@protoc_insertion_point(field_get:rbk.protocol.Message_IMU.acc_x)
  return _internal_acc_x();
}
inline void Message_IMU::_internal_set_acc_x(double value) {
  
  acc_x_ = value;
}
inline void Message_IMU::set_acc_x(double value) {
  _internal_set_acc_x(value);
  // @@protoc_insertion_point(field_set:rbk.protocol.Message_IMU.acc_x)
}

// double acc_y = 6;
inline void Message_IMU::clear_acc_y() {
  acc_y_ = 0;
}
inline double Message_IMU::_internal_acc_y() const {
  return acc_y_;
}
inline double Message_IMU::acc_y() const {
  // @@protoc_insertion_point(field_get:rbk.protocol.Message_IMU.acc_y)
  return _internal_acc_y();
}
inline void Message_IMU::_internal_set_acc_y(double value) {
  
  acc_y_ = value;
}
inline void Message_IMU::set_acc_y(double value) {
  _internal_set_acc_y(value);
  // @@protoc_insertion_point(field_set:rbk.protocol.Message_IMU.acc_y)
}

// double acc_z = 7;
inline void Message_IMU::clear_acc_z() {
  acc_z_ = 0;
}
inline double Message_IMU::_internal_acc_z() const {
  return acc_z_;
}
inline double Message_IMU::acc_z() const {
  // @@protoc_insertion_point(field_get:rbk.protocol.Message_IMU.acc_z)
  return _internal_acc_z();
}
inline void Message_IMU::_internal_set_acc_z(double value) {
  
  acc_z_ = value;
}
inline void Message_IMU::set_acc_z(double value) {
  _internal_set_acc_z(value);
  // @@protoc_insertion_point(field_set:rbk.protocol.Message_IMU.acc_z)
}

// double rot_x = 8;
inline void Message_IMU::clear_rot_x() {
  rot_x_ = 0;
}
inline double Message_IMU::_internal_rot_x() const {
  return rot_x_;
}
inline double Message_IMU::rot_x() const {
  // @@protoc_insertion_point(field_get:rbk.protocol.Message_IMU.rot_x)
  return _internal_rot_x();
}
inline void Message_IMU::_internal_set_rot_x(double value) {
  
  rot_x_ = value;
}
inline void Message_IMU::set_rot_x(double value) {
  _internal_set_rot_x(value);
  // @@protoc_insertion_point(field_set:rbk.protocol.Message_IMU.rot_x)
}

// double rot_y = 9;
inline void Message_IMU::clear_rot_y() {
  rot_y_ = 0;
}
inline double Message_IMU::_internal_rot_y() const {
  return rot_y_;
}
inline double Message_IMU::rot_y() const {
  // @@protoc_insertion_point(field_get:rbk.protocol.Message_IMU.rot_y)
  return _internal_rot_y();
}
inline void Message_IMU::_internal_set_rot_y(double value) {
  
  rot_y_ = value;
}
inline void Message_IMU::set_rot_y(double value) {
  _internal_set_rot_y(value);
  // @@protoc_insertion_point(field_set:rbk.protocol.Message_IMU.rot_y)
}

// double rot_z = 10;
inline void Message_IMU::clear_rot_z() {
  rot_z_ = 0;
}
inline double Message_IMU::_internal_rot_z() const {
  return rot_z_;
}
inline double Message_IMU::rot_z() const {
  // @@protoc_insertion_point(field_get:rbk.protocol.Message_IMU.rot_z)
  return _internal_rot_z();
}
inline void Message_IMU::_internal_set_rot_z(double value) {
  
  rot_z_ = value;
}
inline void Message_IMU::set_rot_z(double value) {
  _internal_set_rot_z(value);
  // @@protoc_insertion_point(field_set:rbk.protocol.Message_IMU.rot_z)
}

// int32 rot_off_x = 11;
inline void Message_IMU::clear_rot_off_x() {
  rot_off_x_ = 0;
}
inline int32_t Message_IMU::_internal_rot_off_x() const {
  return rot_off_x_;
}
inline int32_t Message_IMU::rot_off_x() const {
  // @@protoc_insertion_point(field_get:rbk.protocol.Message_IMU.rot_off_x)
  return _internal_rot_off_x();
}
inline void Message_IMU::_internal_set_rot_off_x(int32_t value) {
  
  rot_off_x_ = value;
}
inline void Message_IMU::set_rot_off_x(int32_t value) {
  _internal_set_rot_off_x(value);
  // @@protoc_insertion_point(field_set:rbk.protocol.Message_IMU.rot_off_x)
}

// int32 rot_off_y = 12;
inline void Message_IMU::clear_rot_off_y() {
  rot_off_y_ = 0;
}
inline int32_t Message_IMU::_internal_rot_off_y() const {
  return rot_off_y_;
}
inline int32_t Message_IMU::rot_off_y() const {
  // @@protoc_insertion_point(field_get:rbk.protocol.Message_IMU.rot_off_y)
  return _internal_rot_off_y();
}
inline void Message_IMU::_internal_set_rot_off_y(int32_t value) {
  
  rot_off_y_ = value;
}
inline void Message_IMU::set_rot_off_y(int32_t value) {
  _internal_set_rot_off_y(value);
  // @@protoc_insertion_point(field_set:rbk.protocol.Message_IMU.rot_off_y)
}

// int32 rot_off_z = 13;
inline void Message_IMU::clear_rot_off_z() {
  rot_off_z_ = 0;
}
inline int32_t Message_IMU::_internal_rot_off_z() const {
  return rot_off_z_;
}
inline int32_t Message_IMU::rot_off_z() const {
  // @@protoc_insertion_point(field_get:rbk.protocol.Message_IMU.rot_off_z)
  return _internal_rot_off_z();
}
inline void Message_IMU::_internal_set_rot_off_z(int32_t value) {
  
  rot_off_z_ = value;
}
inline void Message_IMU::set_rot_off_z(int32_t value) {
  _internal_set_rot_off_z(value);
  // @@protoc_insertion_point(field_set:rbk.protocol.Message_IMU.rot_off_z)
}

// double qx = 14;
inline void Message_IMU::clear_qx() {
  qx_ = 0;
}
inline double Message_IMU::_internal_qx() const {
  return qx_;
}
inline double Message_IMU::qx() const {
  // @@protoc_insertion_point(field_get:rbk.protocol.Message_IMU.qx)
  return _internal_qx();
}
inline void Message_IMU::_internal_set_qx(double value) {
  
  qx_ = value;
}
inline void Message_IMU::set_qx(double value) {
  _internal_set_qx(value);
  // @@protoc_insertion_point(field_set:rbk.protocol.Message_IMU.qx)
}

// double qy = 15;
inline void Message_IMU::clear_qy() {
  qy_ = 0;
}
inline double Message_IMU::_internal_qy() const {
  return qy_;
}
inline double Message_IMU::qy() const {
  // @@protoc_insertion_point(field_get:rbk.protocol.Message_IMU.qy)
  return _internal_qy();
}
inline void Message_IMU::_internal_set_qy(double value) {
  
  qy_ = value;
}
inline void Message_IMU::set_qy(double value) {
  _internal_set_qy(value);
  // @@protoc_insertion_point(field_set:rbk.protocol.Message_IMU.qy)
}

// double qz = 16;
inline void Message_IMU::clear_qz() {
  qz_ = 0;
}
inline double Message_IMU::_internal_qz() const {
  return qz_;
}
inline double Message_IMU::qz() const {
  // @@protoc_insertion_point(field_get:rbk.protocol.Message_IMU.qz)
  return _internal_qz();
}
inline void Message_IMU::_internal_set_qz(double value) {
  
  qz_ = value;
}
inline void Message_IMU::set_qz(double value) {
  _internal_set_qz(value);
  // @@protoc_insertion_point(field_set:rbk.protocol.Message_IMU.qz)
}

// double qw = 17;
inline void Message_IMU::clear_qw() {
  qw_ = 0;
}
inline double Message_IMU::_internal_qw() const {
  return qw_;
}
inline double Message_IMU::qw() const {
  // @@protoc_insertion_point(field_get:rbk.protocol.Message_IMU.qw)
  return _internal_qw();
}
inline void Message_IMU::_internal_set_qw(double value) {
  
  qw_ = value;
}
inline void Message_IMU::set_qw(double value) {
  _internal_set_qw(value);
  // @@protoc_insertion_point(field_set:rbk.protocol.Message_IMU.qw)
}

// .rbk.protocol.Message_ImuInstallInfo install_info = 18;
inline bool Message_IMU::_internal_has_install_info() const {
  return this != internal_default_instance() && install_info_ != nullptr;
}
inline bool Message_IMU::has_install_info() const {
  return _internal_has_install_info();
}
inline void Message_IMU::clear_install_info() {
  if (GetArenaForAllocation() == nullptr && install_info_ != nullptr) {
    delete install_info_;
  }
  install_info_ = nullptr;
}
inline const ::rbk::protocol::Message_ImuInstallInfo& Message_IMU::_internal_install_info() const {
  const ::rbk::protocol::Message_ImuInstallInfo* p = install_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::rbk::protocol::Message_ImuInstallInfo&>(
      ::rbk::protocol::_Message_ImuInstallInfo_default_instance_);
}
inline const ::rbk::protocol::Message_ImuInstallInfo& Message_IMU::install_info() const {
  // @@protoc_insertion_point(field_get:rbk.protocol.Message_IMU.install_info)
  return _internal_install_info();
}
inline void Message_IMU::unsafe_arena_set_allocated_install_info(
    ::rbk::protocol::Message_ImuInstallInfo* install_info) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(install_info_);
  }
  install_info_ = install_info;
  if (install_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:rbk.protocol.Message_IMU.install_info)
}
inline ::rbk::protocol::Message_ImuInstallInfo* Message_IMU::release_install_info() {
  
  ::rbk::protocol::Message_ImuInstallInfo* temp = install_info_;
  install_info_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::rbk::protocol::Message_ImuInstallInfo* Message_IMU::unsafe_arena_release_install_info() {
  // @@protoc_insertion_point(field_release:rbk.protocol.Message_IMU.install_info)
  
  ::rbk::protocol::Message_ImuInstallInfo* temp = install_info_;
  install_info_ = nullptr;
  return temp;
}
inline ::rbk::protocol::Message_ImuInstallInfo* Message_IMU::_internal_mutable_install_info() {
  
  if (install_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::rbk::protocol::Message_ImuInstallInfo>(GetArenaForAllocation());
    install_info_ = p;
  }
  return install_info_;
}
inline ::rbk::protocol::Message_ImuInstallInfo* Message_IMU::mutable_install_info() {
  ::rbk::protocol::Message_ImuInstallInfo* _msg = _internal_mutable_install_info();
  // @@protoc_insertion_point(field_mutable:rbk.protocol.Message_IMU.install_info)
  return _msg;
}
inline void Message_IMU::set_allocated_install_info(::rbk::protocol::Message_ImuInstallInfo* install_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete install_info_;
  }
  if (install_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(install_info);
    if (message_arena != submessage_arena) {
      install_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, install_info, submessage_arena);
    }
    
  } else {
    
  }
  install_info_ = install_info;
  // @@protoc_insertion_point(field_set_allocated:rbk.protocol.Message_IMU.install_info)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol
}  // namespace rbk

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_message_5fimu_2eproto
